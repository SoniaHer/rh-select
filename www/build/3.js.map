{"version":3,"sources":["../../src/pages/terminos-condiciones/terminos-condiciones.module.ts","../../node_modules/@ionic-native/document-viewer/index.js","../../src/pages/terminos-condiciones/terminos-condiciones.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TerminosCondicionesPage } from './terminos-condiciones';\nimport { DocumentViewer } from '@ionic-native/document-viewer';\n\n@NgModule({\n  declarations: [\n    TerminosCondicionesPage,\n    \n  ],\n  imports: [\n    IonicPageModule.forChild(TerminosCondicionesPage),\n  ],\n  providers: [\n    DocumentViewer,\n  ]\n})\nexport class TerminosCondicionesPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/terminos-condiciones/terminos-condiciones.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n/**\n * @name Document Viewer\n * @description\n * This plugin offers a slim API to view PDF files which are either stored in the apps assets folder (/www/*) or in any other file system directory available via the cordova file plugin.\n *\n * @usage\n * ```typescript\n * import { DocumentViewer } from '@ionic-native/document-viewer';\n *\n *\n * constructor(private document: DocumentViewer) { }\n *\n * ...\n * const options: DocumentViewerOptions = {\n *   title: 'My PDF'\n * }\n *\n * this.document.viewDocument('assets/myFile.pdf', 'application/pdf', options)\n *\n * ```\n *\n * @interfaces\n * DocumentViewerOptions\n */\nvar DocumentViewer = (function (_super) {\n    __extends(DocumentViewer, _super);\n    function DocumentViewer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Displays the email composer pre-filled with data.\n     *\n     * @returns {Promise<any>} Resolves promise when the EmailComposer has been opened\n     */\n    /**\n       * Displays the email composer pre-filled with data.\n       *\n       * @returns {Promise<any>} Resolves promise when the EmailComposer has been opened\n       */\n    DocumentViewer.prototype.getSupportInfo = /**\n       * Displays the email composer pre-filled with data.\n       *\n       * @returns {Promise<any>} Resolves promise when the EmailComposer has been opened\n       */\n    function () { return; };\n    /**\n     * Check if the document can be shown\n     *\n     * @param url {string} Url to the file\n     * @param contentType {string} Content type of the file\n     * @param options {Array<DocumentViewerOptions>} options\n     * @param [onPossible] {Function}\n     * @param [onMissingApp] {Function}\n     * @param [onImpossible] {Function}\n     * @param [onError] {Function}\n     */\n    /**\n       * Check if the document can be shown\n       *\n       * @param url {string} Url to the file\n       * @param contentType {string} Content type of the file\n       * @param options {Array<DocumentViewerOptions>} options\n       * @param [onPossible] {Function}\n       * @param [onMissingApp] {Function}\n       * @param [onImpossible] {Function}\n       * @param [onError] {Function}\n       */\n    DocumentViewer.prototype.canViewDocument = /**\n       * Check if the document can be shown\n       *\n       * @param url {string} Url to the file\n       * @param contentType {string} Content type of the file\n       * @param options {Array<DocumentViewerOptions>} options\n       * @param [onPossible] {Function}\n       * @param [onMissingApp] {Function}\n       * @param [onImpossible] {Function}\n       * @param [onError] {Function}\n       */\n    function (url, contentType, options, onPossible, onMissingApp, onImpossible, onError) { };\n    /**\n     * Opens the file\n     *\n     * @param url {string} Url to the file\n     * @param contentType {string} Content type of the file\n     * @param options {DocumentViewerOptions} options\n     * @param [onShow] {Function}\n     * @param [onClose] {Function}\n     * @param [onMissingApp] {Function}\n     * @param [onError] {Function}\n     */\n    /**\n       * Opens the file\n       *\n       * @param url {string} Url to the file\n       * @param contentType {string} Content type of the file\n       * @param options {DocumentViewerOptions} options\n       * @param [onShow] {Function}\n       * @param [onClose] {Function}\n       * @param [onMissingApp] {Function}\n       * @param [onError] {Function}\n       */\n    DocumentViewer.prototype.viewDocument = /**\n       * Opens the file\n       *\n       * @param url {string} Url to the file\n       * @param contentType {string} Content type of the file\n       * @param options {DocumentViewerOptions} options\n       * @param [onShow] {Function}\n       * @param [onClose] {Function}\n       * @param [onMissingApp] {Function}\n       * @param [onError] {Function}\n       */\n    function (url, contentType, options, onShow, onClose, onMissingApp, onError) { };\n    DocumentViewer.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], DocumentViewer.prototype, \"getSupportInfo\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Object, Function, Function, Function, Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], DocumentViewer.prototype, \"canViewDocument\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Object, Function, Function, Function, Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], DocumentViewer.prototype, \"viewDocument\", null);\n    /**\n     * @name Document Viewer\n     * @description\n     * This plugin offers a slim API to view PDF files which are either stored in the apps assets folder (/www/*) or in any other file system directory available via the cordova file plugin.\n     *\n     * @usage\n     * ```typescript\n     * import { DocumentViewer } from '@ionic-native/document-viewer';\n     *\n     *\n     * constructor(private document: DocumentViewer) { }\n     *\n     * ...\n     * const options: DocumentViewerOptions = {\n     *   title: 'My PDF'\n     * }\n     *\n     * this.document.viewDocument('assets/myFile.pdf', 'application/pdf', options)\n     *\n     * ```\n     *\n     * @interfaces\n     * DocumentViewerOptions\n     */\n    DocumentViewer = __decorate([\n        Plugin({\n            pluginName: 'Document Viewer',\n            plugin: 'cordova-plugin-document-viewer',\n            pluginRef: 'SitewaertsDocumentViewer',\n            repo: 'https://github.com/sitewaerts/cordova-plugin-document-viewer',\n            platforms: ['Android', 'iOS', 'Windows']\n        })\n    ], DocumentViewer);\n    return DocumentViewer;\n}(IonicNativePlugin));\nexport { DocumentViewer };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/document-viewer/index.js\n// module id = 749\n// module chunks = 3","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { DocumentViewer,DocumentViewerOptions } from '@ionic-native/document-viewer';\n/**\n * Generated class for the TerminosCondicionesPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-terminos-condiciones',\n  templateUrl: 'terminos-condiciones.html',\n})\nexport class TerminosCondicionesPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,private document: DocumentViewer) {\n    const options: DocumentViewerOptions = {\n      title: 'Terminos y Condiciones'\n    }\n    this.document.viewDocument('assets/pdf/terminosycondiciones.pdf', 'application/pdf', options)\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad TerminosCondicionesPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/terminos-condiciones/terminos-condiciones.ts"],"sourceRoot":""}